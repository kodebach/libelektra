name: CMake

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]
        compiler: [ gcc, clang ]
        build_config: [ full, shared, static ]
        asan: [ true, false ]
        compilers: [ '{ "gcc": { "cc": "gcc", "cxx": "g++" }, "clang": { "cc": "clang", "cxx": "clang++" } }' ]

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build
    
    - name: Choose Compiler
      

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -G ninja 
        -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        -DCC_COMPILER=${{ fromJson(matrix.compilers)[matrix.compiler].cc }}
        -DCXX_COMPILER=${{ fromJson(matrix.compilers)[matrix.compiler].cxx }}
        -DPLUGINS=ALL
        -DBINDINGS=ALL
        -DTOOLS=ALL
        -DBUILD_FULL=${{ matrix.build_config == 'full' }}
        -DBUILD_SHARED=${{ matrix.build_config == 'shared' }}
        -DBUILD_STATIC=${{ matrix.build_config == 'static' }}
        -DENABLE_ASAN=${{ matrix.asan }}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Test all
      if: ${{ !matrix.asan }}
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --target run_all

    - name: Test nocheckshell
      if: ${{ matrix.asan }}
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --target run_nocheckshell

    - name: Install
      if: ${{ !matrix.asan }}
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --target install
    
    - name: Test installed
      if: ${{ !matrix.asan }}
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: kdb run_all
